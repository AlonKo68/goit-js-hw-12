{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from 'axios';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst API_KEY = `49502034-df263a01178fc9ef1a0cdcc0b`;\nconst BASE_URL = `https://pixabay.com/api/`;\n\nexport async function fetchImages(query) {\n    try {\n        const response = await axios.get(BASE_URL, {\n            params: {\n                key: API_KEY,\n                q: query,\n                image_type: `photo`,\n                orientation: `horizontal`,\n                safesearch: true,\n            }\n        });\n        console.log(response.data);\n        return response.data.hits;\n\n    } catch (error) {\n        console.error(`Error fetching images:`, error)\n        throw error\n    }\n\n}\n","import SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst gallery = document.querySelector('.gallery');\n\nconst lightbox = new SimpleLightbox('.gallery a', {\n    captionsData: 'alt',\n});\n\nexport function renderImgCard(images) {\n    gallery.innerHTML = images\n        .map(\n            ({\n                webformatURL,\n                largeImageURL,\n                tags,\n                likes,\n                views,\n                comments,\n                downloads,\n            }) =>\n                `<li class=\"gallery-item\">\n            <a class=\"gallery-link\" href=\"${largeImageURL}\">\n                <img class=\"gallery-image\" src=\"${webformatURL}\" alt=\"${tags}\" width=\"360\" height=\"200\"/>\n                <ul class=\"gallery-text-list\">\n                    <li class=\"gallery-text-item\"><h3>Likes</h3><p>${likes}</p></li>\n                    <li class=\"gallery-text-item\"><h3>Views</h3><p>${views}</p></li>\n                    <li class=\"gallery-text-item\"><h3>Comments</h3><p>${comments}</p></li>\n                    <li class=\"gallery-text-item\"><h3>Downloads</h3><p>${downloads}</p></li>\n                </ul>\n            </a>\n        </li>`\n        )\n        .join('');\n\n    lightbox.refresh();\n}\n\nexport function clearGallery() {\n    gallery.innerHTML = '';\n}\n","import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nimport { fetchImages } from './js/pixabay-api';\nimport { renderImgCard, clearGallery } from './js/render-functions';\n\nconst form = document.querySelector('.form');\nconst spinner = document.querySelector('.loader');\n\nform.addEventListener('submit', handlerSearch);\n\nfunction handlerSearch(evt) {\n    evt.preventDefault();\n    const formEvt = evt.currentTarget;\n    const queryValue = formEvt.elements.query.value.trim();\n    spinner.style.display = 'flex';\n    clearGallery();\n\n    if (queryValue === '') {\n        iziToast.error({\n            title: 'Error',\n            message: 'Please enter a search term!',\n            position: 'topRight',\n        });\n        spinner.style.display = 'none';\n    } else {\n        fetchImages(queryValue)\n            .then(images => {\n                if (images.length === 0) {\n                    iziToast.warning({\n                        message:\n                            'No images found. Try again!!',\n                        backgroundColor: '#EF4040',\n                        messageColor: '#FFF',\n                        iconText: '⚠︎',\n                        iconColor: '#FFF',\n                        close: true,\n                        balloon: true,\n\n                        position: 'topRight',\n                    });\n                }\n                renderImgCard(images);\n\n            })\n            .catch((error) => {\n                iziToast.error({\n                    title: 'Error',\n                    message:\n                        'Failed to fetch images. Try again later!',\n                    position: 'topRight',\n                });\n            })\n            .finally(() => {\n                formEvt.reset();\n                spinner.style.display = 'none';\n            });\n    }\n}\n"],"names":["API_KEY","BASE_URL","fetchImages","query","response","axios","error","gallery","lightbox","SimpleLightbox","renderImgCard","images","webformatURL","largeImageURL","tags","likes","views","comments","downloads","clearGallery","form","spinner","handlerSearch","evt","formEvt","queryValue","iziToast"],"mappings":"owBAMA,MAAMA,EAAU,qCACVC,EAAW,2BAEV,eAAeC,EAAYC,EAAO,CACrC,GAAI,CACA,MAAMC,EAAW,MAAMC,EAAM,IAAIJ,EAAU,CACvC,OAAQ,CACJ,IAAKD,EACL,EAAGG,EACH,WAAY,QACZ,YAAa,aACb,WAAY,EACf,CACb,CAAS,EACD,eAAQ,IAAIC,EAAS,IAAI,EAClBA,EAAS,KAAK,IAExB,OAAQE,EAAO,CACZ,cAAQ,MAAM,yBAA0BA,CAAK,EACvCA,CACT,CAEL,CCvBA,MAAMC,EAAU,SAAS,cAAc,UAAU,EAE3CC,EAAW,IAAIC,EAAe,aAAc,CAC9C,aAAc,KAClB,CAAC,EAEM,SAASC,EAAcC,EAAQ,CAClCJ,EAAQ,UAAYI,EACf,IACG,CAAC,CACG,aAAAC,EACA,cAAAC,EACA,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,CACH,IACG;AAAA,4CAC4BL,CAAa;AAAA,kDACPD,CAAY,UAAUE,CAAI;AAAA;AAAA,qEAEPC,CAAK;AAAA,qEACLC,CAAK;AAAA,wEACFC,CAAQ;AAAA,yEACPC,CAAS;AAAA;AAAA;AAAA,cAIzE,EACA,KAAK,EAAE,EAEZV,EAAS,QAAO,CACpB,CAEO,SAASW,GAAe,CAC3BZ,EAAQ,UAAY,EACxB,CCpCA,MAAMa,EAAO,SAAS,cAAc,OAAO,EACrCC,EAAU,SAAS,cAAc,SAAS,EAEhDD,EAAK,iBAAiB,SAAUE,CAAa,EAE7C,SAASA,EAAcC,EAAK,CACxBA,EAAI,eAAc,EAClB,MAAMC,EAAUD,EAAI,cACdE,EAAaD,EAAQ,SAAS,MAAM,MAAM,OAChDH,EAAQ,MAAM,QAAU,OACxBF,IAEIM,IAAe,IACfC,EAAS,MAAM,CACX,MAAO,QACP,QAAS,8BACT,SAAU,UACtB,CAAS,EACDL,EAAQ,MAAM,QAAU,QAExBnB,EAAYuB,CAAU,EACjB,KAAKd,GAAU,CACRA,EAAO,SAAW,GAClBe,EAAS,QAAQ,CACb,QACI,+BACJ,gBAAiB,UACjB,aAAc,OACd,SAAU,KACV,UAAW,OACX,MAAO,GACP,QAAS,GAET,SAAU,UAClC,CAAqB,EAELhB,EAAcC,CAAM,CAEpC,CAAa,EACA,MAAOL,GAAU,CACdoB,EAAS,MAAM,CACX,MAAO,QACP,QACI,2CACJ,SAAU,UAC9B,CAAiB,CACjB,CAAa,EACA,QAAQ,IAAM,CACXF,EAAQ,MAAK,EACbH,EAAQ,MAAM,QAAU,MACxC,CAAa,CAEb"}